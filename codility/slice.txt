You are given a non-empty zero-indexed array A consisting of N integers. Each element of array A can be −1, 0 or 1.

A pair of integers (P, Q), such that 0 ≤ P ≤ Q < N, is called a slice of array A. The sum of a slice (P, Q) is the total of A[P] + A[P + 1] + ... + A[Q].

You are given integer S. The goal is to find the largest slice whose sum equals S.

For example, consider integer S = 2 and array A such that:

    A[0] = 1
    A[1] = 0
    A[2] = -1
    A[3] = 1
    A[4] = 1
    A[5] = -1
    A[6] = -1
There are exactly two slices (0, 4) and (3, 4) whose sum equals 2. The largest such slice is (0, 4) and its length equals 5.

Write a function:

function solution($A, $S);

that, given a non-empty zero-indexed array A consisting of N integers and an integer S, returns the length of the largest slice whose sum equals S.

The function should return −1 if there is no such slice.

For example, given S = 2 and:

    A[0] = 1
    A[1] = 0
    A[2] = -1
    A[3] = 1
    A[4] = 1
    A[5] = -1
    A[6] = -1
the function should return 5, as explained above.

Assume that:

N and S are integers within the range [1..100,000];
each element of array A is an integer within the range [−1..1].
Complexity:

expected worst-case time complexity is O(N);
expected worst-case space complexity is O(N), beyond input storage (not counting the storage required for input arguments).
Elements of input arrays can be modified.
